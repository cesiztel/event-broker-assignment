AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Self-Service Portal Service to manage brokers events by publishers and subscribers
Parameters:
  Stage:
    Type: String
    Default: dev
  TableName:
    Type: String
    Default: "self-service-events-table"
  ApiName:
    Type: String
    Default: "self-service-portal-api"

Globals:
  Function:
    Timeout: 3

Resources:
  SelfServicePortalApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join ["-", [!Ref Stage, !Ref ApiName]]
      StageName: !Ref Stage
      Models:
        SubscriptionModel:
          type: object
          required:
            - event_type
            - version
            - target_unit
            - connection_type
            - connection_string
          properties:
            event_type:
              type: string
            version:
              type: string
            target_unit:
              type: string
            connection_type:
              type: string
              enum: ["HTTPS", "SQS", "LAMBDA"]
            connection_string:
              type: string
        EventModel:
          type: object
          required:
            - application
            - event_type
            - schema
            - connection_type
          properties:
            application:
              type: string
            event_type:
              type: string
            description:
              type: string
            connection_type:
              type: string
              enum: ["HTTPS"]
            schema:
              type: object

  CreateEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_event/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          TableName: !Join ["-", [!Ref Stage, !Ref TableName]]
      Events:
        CreateEvent:
          Type: Api
          Properties:
            Path: /events
            Method: post
            RequestModel:
              Model: EventModel
              Required: true
              ValidateBody: true
            RestApiId: !Ref SelfServicePortalApi
      Policies:
        - Statement:
            - Sid: SSMCreateSchemasPolicy
              Effect: Allow
              Action:
                - schemas:CreateSchema
              Resource: !Sub "arn:aws:schemas:${AWS::Region}:${AWS::AccountId}:schema/self.service.portal.registry/*"
            - Sid: SSMPutItemStoragePolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                !Join [
                  "/",
                  [
                    !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table",
                    !Join ["-", [!Ref Stage, !Ref TableName]],
                  ],
                ]

  SubscribeToEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: subscribe_to_event/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          TableName: !Join ["-", [!Ref Stage, !Ref TableName]]
      Events:
        SubscribeToEvent:
          Type: Api
          Properties:
            Path: /subscriptions
            Method: post
            RequestModel:
              Model: SubscriptionModel
              Required: true
              ValidateBody: true
            RestApiId: !Ref SelfServicePortalApi
      Policies:
        - Statement:
            - Sid: SSMPutSubscriptionItemStoragePolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                !Join [
                  "/",
                  [
                    !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table",
                    !Join ["-", [!Ref Stage, !Ref TableName]],
                  ],
                ]

  GetAllEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_events/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          TableName: !Join ["-", [!Ref Stage, !Ref TableName]]
      Events:
        GetAllEvents:
          Type: Api
          Properties:
            Path: /events
            Method: get
            RestApiId: !Ref SelfServicePortalApi
      Policies:
        - Statement:
            - Sid: Stmt1659384335476
              Effect: Allow
              Action:
                - dynamodb:Scan
              Resource:
                !Join [
                  "/",
                  [
                    !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table",
                    !Join ["-", [!Ref Stage, !Ref TableName]],
                  ],
                ]

  SelfServiceEventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "PK"
          AttributeType: "S"
        - AttributeName: "SK"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "PK"
          KeyType: "HASH"
        - AttributeName: "SK"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
      TableName: !Join ["-", [!Ref Stage, !Ref TableName]]

Outputs:
  SelfServicePortalApi:
    Description: "API Gateway endpoint URL for dev stage for self-service portal API"
    Value:
      !Join [
        "/",
        [
          !Sub "https://${SelfServicePortalApi}.execute-api.${AWS::Region}.amazonaws.com",
          !Ref Stage,
        ],
      ]
  CreateEventFunction:
    Description: "Create event Lambda Function ARN"
    Value: !GetAtt CreateEventFunction.Arn
  CreateEventFunctionIamRole:
    Description: "Implicit IAM Role created for Create Event function"
    Value: !GetAtt CreateEventFunctionRole.Arn
  SubscribeToEventFunction:
    Description: "Subscribe to event Function ARN"
    Value: !GetAtt SubscribeToEventFunction.Arn
  SubscribeToEventFunctionIamRole:
    Description: "Implicit IAM Role created for Subscribe to Event function"
    Value: !GetAtt SubscribeToEventFunctionRole.Arn
  GetAllEventsFunction:
    Description: "Get all the events Funtion ARN"
    Value: !GetAtt GetAllEventsFunction.Arn
  GetAllEventsFunctionIamRole:
    Description: "Implicit IAM Role created for Get all the events function"
    Value: !GetAtt GetAllEventsFunctionRole.Arn
  SelfServiceEventsTable:
    Description: "Self Service API datastore"
    Value: !GetAtt SelfServiceEventsTable.Arn
  SelfServiceEventsTableName:
    Description: "Self Service API datastore name"
    Value: !Join ["-", [!Ref Stage, !Ref TableName]]
